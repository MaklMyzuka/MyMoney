<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="sql_get_accounts_for_money_list_total" translatable="false">
        SELECT
            [account_total].[account_id] AS [text_id],
            [account].[name] AS [text],
            [currency].[id] AS [currency_id],
            [currency].[symbol] AS [currency_symbol],
            [account_total].[sum10000] AS [sum10000]
        FROM
        (
            SELECT [account_parts].[account_id] AS [account_id], SUM([account_parts].[sum10000]) AS [sum10000]
            FROM
            (
                SELECT [account].[id] AS [account_id], [account].[sum10000] AS [sum10000]
                FROM [account]
                    UNION ALL
                SELECT [transfer].[account_id_from] AS [account_id], -SUM([transfer].[sum10000_from]) AS [sum10000]
                FROM [transfer]
                WHERE [transfer].[is_committed] = 1
                GROUP BY [transfer].[account_id_from]
                    UNION ALL
                SELECT [transfer].[account_id_to] AS [account_id], SUM([transfer].[sum10000_to]) AS [sum10000]
                FROM [transfer]
                WHERE [transfer].[is_committed] = 1
                GROUP BY [transfer].[account_id_to]
                    UNION ALL
                SELECT [transaction].[account_id] AS [account_id], SUM([transaction].[sum10000]) AS [sum10000]
                FROM [transaction]
                WHERE [transaction].[is_committed] = 1
                GROUP BY [transaction].[account_id]
            ) AS [account_parts]
            GROUP BY [account_parts].[account_id]
        ) AS [account_total]
        INNER JOIN [account] ON [account].[id] = [account_total].[account_id]
        INNER JOIN [currency] ON [currency].[id] = [account].[currency_id]
        WHERE [account].[is_visible] = 1;
    </string>
    <string name="sql_get_account_groups_for_money_list_total" translatable="false">
        SELECT
            [account_group_total].[account_group_id] AS [text_id],
            [account_group].[name] AS [text],
            [currency].[id] AS [currency_id],
            [currency].[symbol] AS [currency_symbol],
            [account_group_total].[sum10000] AS [sum10000]
        FROM
        (
            SELECT [account_group_parts].[account_group_id] AS [account_group_id], [account_group_parts].[currency_id] AS [currency_id], SUM([account_group_parts].[sum10000]) AS [sum10000]
            FROM
            (
                SELECT [account_group_accounts].[account_group_id] AS [account_group_id], [account].[currency_id] AS [currency_id], SUM([account].[sum10000]) AS [sum10000]
                FROM [account]
                INNER JOIN [account_group_accounts] ON [account_group_accounts].[account_id] = [account].[id]
                GROUP BY [account_group_accounts].[account_group_id], [account].[currency_id]
                    UNION ALL
                SELECT [account_group_accounts].[account_group_id] AS [account_group_id], [account].[currency_id] AS [currency_id], -SUM([transfer].[sum10000_from]) AS [sum10000]
                FROM [transfer]
                INNER JOIN [account_group_accounts] ON [account_group_accounts].[account_id] = [transfer].[account_id_from]
                INNER JOIN [account] ON [account].[id] = [transfer].[account_id_from]
                WHERE [transfer].[is_committed] = 1
                GROUP BY [account_group_accounts].[account_group_id], [account].[currency_id]
                    UNION ALL
                SELECT [account_group_accounts].[account_group_id] AS [account_group_id], [account].[currency_id] AS [currency_id], SUM([transfer].[sum10000_to]) AS [sum10000]
                FROM [transfer]
                INNER JOIN [account_group_accounts] ON [account_group_accounts].[account_id] = [transfer].[account_id_to]
                INNER JOIN [account] ON [account].[id] = [transfer].[account_id_to]
                WHERE [transfer].[is_committed] = 1
                GROUP BY [account_group_accounts].[account_group_id], [account].[currency_id]
                    UNION ALL
                SELECT [account_group_accounts].[account_group_id] AS [account_group_id], [account].[currency_id] AS [currency_id], SUM([transaction].[sum10000]) AS [sum10000]
                FROM [transaction]
                INNER JOIN [account_group_accounts] ON [account_group_accounts].[account_id] = [transaction].[account_id]
                INNER JOIN [account] ON [account].[id] = [transaction].[account_id]
                WHERE [transaction].[is_committed] = 1
                GROUP BY [account_group_accounts].[account_group_id], [account].[currency_id]
            ) AS [account_group_parts]
            GROUP BY [account_group_parts].[account_group_id], [account_group_parts].[currency_id]
        ) AS [account_group_total]
        INNER JOIN [account_group] ON [account_group].[id] = [account_group_total].[account_group_id]
        INNER JOIN [currency] ON [currency].[id] = [account_group_total].[currency_id]
        WHERE [account_group].[is_visible] = 1;
    </string>
    <string name="sql_get_accounts_for_money_list" translatable="false">
        SELECT
            [account_total].[account_id] AS [text_id],
            [account].[name] AS [text],
            [currency].[id] AS [currency_id],
            [currency].[symbol] AS [currency_symbol],
            [account_total].[sum10000] AS [sum10000]
        FROM
        (
            SELECT [account_parts].[account_id] AS [account_id], SUM([account_parts].[sum10000]) AS [sum10000]
            FROM
            (
                SELECT [transfer].[account_id_from] AS [account_id], -SUM([transfer].[sum10000_from]) AS [sum10000]
                FROM [transfer]
                WHERE [transfer].[is_committed] = 1 AND [transfer].[created_at_utc] > ?1 AND [transfer].[created_at_utc] <![CDATA[<]]> ?2
                GROUP BY [transfer].[account_id_from]
                    UNION ALL
                SELECT [transfer].[account_id_to] AS [account_id], SUM([transfer].[sum10000_to]) AS [sum10000]
                FROM [transfer]
                WHERE [transfer].[is_committed] = 1 AND [transfer].[created_at_utc] > ?1 AND [transfer].[created_at_utc] <![CDATA[<]]> ?2
                GROUP BY [transfer].[account_id_to]
                    UNION ALL
                SELECT [transaction].[account_id] AS [account_id], SUM([transaction].[sum10000]) AS [sum10000]
                FROM [transaction]
                WHERE [transaction].[is_committed] = 1 AND [transaction].[created_at_utc] > ?1 AND [transaction].[created_at_utc] <![CDATA[<]]> ?2
                GROUP BY [transaction].[account_id]
            ) AS [account_parts]
            GROUP BY [account_parts].[account_id]
        ) AS [account_total]
        INNER JOIN [account] ON [account].[id] = [account_total].[account_id]
        INNER JOIN [currency] ON [currency].[id] = [account].[currency_id]
        WHERE [account].[is_visible] = 1;
    </string>
    <string name="sql_get_categories_for_money_list" translatable="false">
        WITH RECURSIVE
        [category_text_loop]([id], [name], [parent_id]) AS
        (
            SELECT
                [category].[id] AS [id],
                [category].[name] AS [name],
                [category].[parent_id] AS [parent_id]
            FROM [category]
                UNION ALL
            SELECT
                [category_text_loop].[id] AS [id],
                [category].[name] || \' > \' || [category_text_loop].[name] AS [name],
                [category].[parent_id] AS [parent_id]
            FROM [category_text_loop]
            INNER JOIN [category] ON [category].[id] = [category_text_loop].[parent_id]
        ),
        [category_text]([id], [name]) AS
        (
            SELECT
                [category_text_loop].[id] AS [id],
                [category_text_loop].[name] AS [name]
            FROM [category_text_loop]
            WHERE [category_text_loop].[parent_id] IS NULL
        ),
        [category_child]([id], [child_id]) AS
        (
            SELECT
                [category].[id] AS [id],
                [category].[id] AS [child_id]
            FROM [category]
                UNION ALL
            SELECT
                [category_child].[id] AS [id],
                [category].[id] AS [child_id]
            FROM [category_child]
            INNER JOIN [category] ON [category].[parent_id] = [category_child].[child_id]
        )
        SELECT
            [category_total].[category_id] AS [text_id],
            [category_text].[name] AS [text],
            [currency].[id] AS [currency_id],
            [currency].[symbol] AS [currency_symbol],
            [category_total].[sum10000] AS [sum10000]
        FROM
        (
            SELECT [category_child].[id] AS [category_id], [account].[currency_id] AS [currency_id], SUM([transaction].[sum10000]) AS [sum10000]
            FROM [transaction]
            INNER JOIN [category_child] ON [category_child].[child_id] = [transaction].[category_id]
            INNER JOIN [account] ON [account].[id] = [transaction].[account_id]
            WHERE [transaction].[is_committed] = 1 AND [transaction].[created_at_utc] > ?1 AND [transaction].[created_at_utc] <![CDATA[<]]> ?2
            GROUP BY [category_child].[id], [account].[currency_id]
        ) AS [category_total]
        INNER JOIN [category] ON [category].[id] = [category_total].[category_id]
        INNER JOIN [category_text] ON [category_text].[id] = [category_total].[category_id]
        INNER JOIN [currency] ON [currency].[id] = [category_total].[currency_id]
        WHERE [category].[is_visible] = 1;
    </string>
    <string name="sql_get_account_groups_for_money_list" translatable="false">
        SELECT
            [account_group_total].[account_group_id] AS [text_id],
            [account_group].[name] AS [text],
            [currency].[id] AS [currency_id],
            [currency].[symbol] AS [currency_symbol],
            [account_group_total].[sum10000] AS [sum10000]
        FROM
        (
            SELECT [account_group_parts].[account_group_id] AS [account_group_id], [account_group_parts].[currency_id] AS [currency_id], SUM([account_group_parts].[sum10000]) AS [sum10000]
            FROM
            (
                SELECT [account_group_accounts].[account_group_id] AS [account_group_id], [account].[currency_id] AS [currency_id], -SUM([transfer].[sum10000_from]) AS [sum10000]
                FROM [transfer]
                INNER JOIN [account_group_accounts] ON [account_group_accounts].[account_id] = [transfer].[account_id_from]
                INNER JOIN [account] ON [account].[id] = [transfer].[account_id_from]
                WHERE [transfer].[is_committed] = 1 AND [transfer].[created_at_utc] > ?1 AND [transfer].[created_at_utc] <![CDATA[<]]> ?2
                GROUP BY [account_group_accounts].[account_group_id], [account].[currency_id]
                    UNION ALL
                SELECT [account_group_accounts].[account_group_id] AS [account_group_id], [account].[currency_id] AS [currency_id], SUM([transfer].[sum10000_to]) AS [sum10000]
                FROM [transfer]
                INNER JOIN [account_group_accounts] ON [account_group_accounts].[account_id] = [transfer].[account_id_to]
                INNER JOIN [account] ON [account].[id] = [transfer].[account_id_to]
                WHERE [transfer].[is_committed] = 1 AND [transfer].[created_at_utc] > ?1 AND [transfer].[created_at_utc] <![CDATA[<]]> ?2
                GROUP BY [account_group_accounts].[account_group_id], [account].[currency_id]
                    UNION ALL
                SELECT [account_group_accounts].[account_group_id] AS [account_group_id], [account].[currency_id] AS [currency_id], SUM([transaction].[sum10000]) AS [sum10000]
                FROM [transaction]
                INNER JOIN [account_group_accounts] ON [account_group_accounts].[account_id] = [transaction].[account_id]
                INNER JOIN [account] ON [account].[id] = [transaction].[account_id]
                WHERE [transaction].[is_committed] = 1 AND [transaction].[created_at_utc] > ?1 AND [transaction].[created_at_utc] <![CDATA[<]]> ?2
                GROUP BY [account_group_accounts].[account_group_id], [account].[currency_id]
            ) AS [account_group_parts]
            GROUP BY [account_group_parts].[account_group_id], [account_group_parts].[currency_id]
        ) AS [account_group_total]
        INNER JOIN [account_group] ON [account_group].[id] = [account_group_total].[account_group_id]
        INNER JOIN [currency] ON [currency].[id] = [account_group_total].[currency_id]
        WHERE [account_group].[is_visible] = 1;
    </string>
</resources>